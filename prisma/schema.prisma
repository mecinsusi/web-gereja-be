// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                               BigInt                  @id @default(autoincrement())
    userName                         String                  @db.VarChar(100)
    fullName                         String                  @db.VarChar(100)
    email                            String                  @unique @db.VarChar(100)
    password                         String                  @db.VarChar(100)
    phoneNumber                      String                  @db.Char(14)
    address                          String                  @db.VarChar(100)
    deleted                          Boolean                 @default(false)
    createAt                         DateTime                @default(now())
    createBy                         BigInt?
    updatedAt                        DateTime                @default(now())
    updatedBy                        BigInt?
    createdByRel                     User?                   @relation("selfCreatedByRel", fields: [createBy], references: [id])
    selfCreatedByRel                 User[]                  @relation("selfCreatedByRel")
    updatedByRel                     User?                   @relation("selfUpdatedByRel", fields: [updatedBy], references: [id])
    selfUpdatedByRel                 User[]                  @relation("selfUpdatedByRel")
    churchIncomeCreateByRel          ChurchIncome[]          @relation("churchIncomeCreateByRel")
    churchIncomeUpdateByRel          ChurchIncome[]          @relation("churchIncomeUpdateByRel")
    churchIncomeCodeCreateByRel      ChurchIncomeCode[]      @relation("churchIncomeCodeCreateByRel")
    churchIncomeCodeUpdateByRel      ChurchIncomeCode[]      @relation("churchIncomeCodeUpdateByRel")
    churchSpendingCreateByRel        ChurchSpending[]        @relation("churchSpendingCreateByRel")
    churchSpendingUpdateByRel        ChurchSpending[]        @relation("churchSpendingUpdateByRel")
    churchSpendingCodeCreateByRel    ChurchSpendingCode[]    @relation("churchSpendingCodeCreateByRel")
    churchSpendingCodeUpdateByRel    ChurchSpendingCode[]    @relation("churchSpendingCodeUpdateByRel")
    userHistoryCreatedByRel          UserHistory[]           @relation("userHistoryCreatedByRel")
    userHistoryUpdatedByRel          UserHistory[]           @relation("userHistoryUpdatedByRel")
    userHistoryIdRel                 UserHistory[]           @relation("userHistoryIdRel")
    churchIncomeHistoryCreateByRel   ChurchIncomeHistory[]   @relation("churchIncomeHistoryCreateByRel")
    churchIncomeHistoryUpdateByRel   ChurchIncomeHistory[]   @relation("churchIncomeHistoryUpdateByRel")
    churchSpendingHistoryCreateByRel ChurchSpendingHistory[] @relation("churchSpendingHistoryCreateByRel")
    churchSpendingHistoryUpdateByRel ChurchSpendingHistory[] @relation("churchSpendingHistoryUpdateByRel")
}

model UserHistory {
    id                      BigInt   @id @default(autoincrement())
    userId                  BigInt
    createdAt               DateTime @default(now())
    createdBy               BigInt?
    updatedAt               DateTime @default(now())
    updatedBy               BigInt?
    deleted                 Boolean  @default(false)
    oldData                 Json
    newData                 Json
    userHistoryCreatedByRel User?    @relation("userHistoryCreatedByRel", fields: [createdBy], references: [id])
    userHistoryUpdatedByRel User?    @relation("userHistoryUpdatedByRel", fields: [updatedBy], references: [id])
    userHistoryIdRel        User     @relation("userHistoryIdRel", fields: [userId], references: [id], onDelete: Cascade)
}

model ChurchIncome {
    id                      BigInt           @id @default(autoincrement())
    incomeCodeId            BigInt
    detail                  String?          @db.Text
    funds                   BigInt
    date                    DateTime
    bill                    String?          @db.VarChar(200)
    billNumber              String?          @db.VarChar(100)
    fundsType               Type
    churchIncomeCodeIdRel   ChurchIncomeCode @relation("churchIncomeCodeIdRel", fields: [incomeCodeId], references: [id], onDelete: Cascade)
    deleted                 Boolean          @default(false)
    createAt                DateTime         @default(now())
    createBy                BigInt?
    churchIncomeCreateByRel User?            @relation("churchIncomeCreateByRel", fields: [createBy], references: [id])
    updatedAt               DateTime         @default(now())
    updatedBy               BigInt?
    churchIncomeUpdateByRel User?            @relation("churchIncomeUpdateByRel", fields: [updatedBy], references: [id])
}

model ChurchIncomeHistory {
    revId                          BigInt           @id @default(autoincrement())
    id                             BigInt
    incomeCodeId                   BigInt
    detail                         String?          @db.Text
    funds                          BigInt
    date                           DateTime
    bill                           String?          @db.VarChar(200)
    billNumber                     String?          @db.VarChar(100)
    fundsType                      Type
    churchIncomeCodeHistoryIdRel   ChurchIncomeCode @relation("churchIncomeCodeHistoryIdRel", fields: [incomeCodeId], references: [id], onDelete: Cascade)
    deleted                        Boolean          @default(false)
    createAt                       DateTime         @default(now())
    createBy                       BigInt?
    churchIncomeHistoryCreateByRel User?            @relation("churchIncomeHistoryCreateByRel", fields: [createBy], references: [id])
    updatedAt                      DateTime         @default(now())
    updatedBy                      BigInt?
    churchIncomeHistoryUpdateByRel User?            @relation("churchIncomeHistoryUpdateByRel", fields: [updatedBy], references: [id])
}

model ChurchIncomeCode {
    id                           BigInt                @id @default(autoincrement())
    incomeCodeName               String                @db.VarChar(100)
    code                         String                @db.VarChar(100)
    description                  String                @db.Text
    deleted                      Boolean               @default(false)
    createAt                     DateTime              @default(now())
    createBy                     BigInt?
    churchIncomeCodeCreateByRel  User?                 @relation("churchIncomeCodeCreateByRel", fields: [createBy], references: [id])
    updatedAt                    DateTime              @default(now())
    updatedBy                    BigInt?
    churchIncomeCodeUpdateByRel  User?                 @relation("churchIncomeCodeUpdateByRel", fields: [updatedBy], references: [id])
    churchIncomeCodeIdRel        ChurchIncome[]        @relation("churchIncomeCodeIdRel")
    churchIncomeCodeHistoryIdRel ChurchIncomeHistory[] @relation("churchIncomeCodeHistoryIdRel")
}

model ChurchSpending {
    id                        BigInt             @id @default(autoincrement())
    spendingCodeId            BigInt
    detail                    String?            @db.Text
    funds                     BigInt
    date                      DateTime
    bill                      String?            @db.VarChar(200)
    billNumber                String?            @db.VarChar(100)
    fundsType                 Type
    churchSpendingCodeIdRel   ChurchSpendingCode @relation("churchSpendingCodeIdRel", fields: [spendingCodeId], references: [id], onDelete: Cascade)
    deleted                   Boolean            @default(false)
    createAt                  DateTime           @default(now())
    createBy                  BigInt?
    churchSpendingCreateByRel User?              @relation("churchSpendingCreateByRel", fields: [createBy], references: [id])
    updatedAt                 DateTime           @default(now())
    updatedBy                 BigInt?
    churchSpendingUpdateByRel User?              @relation("churchSpendingUpdateByRel", fields: [updatedBy], references: [id])
}

model ChurchSpendingHistory {
    revId                            BigInt             @id @default(autoincrement())
    id                               BigInt
    spendingCodeId                   BigInt
    detail                           String?            @db.Text
    funds                            BigInt
    date                             DateTime
    bill                             String             @db.VarChar(200)
    billNumber                       String             @db.VarChar(100)
    fundsType                        Type
    churchSpendingCodeHistoryIdRel   ChurchSpendingCode @relation("churchSpendingHistoryCodeIdRel", fields: [spendingCodeId], references: [id], onDelete: Cascade)
    deleted                          Boolean            @default(false)
    createAt                         DateTime           @default(now())
    createBy                         BigInt?
    churchSpendingHistoryCreateByRel User?              @relation("churchSpendingHistoryCreateByRel", fields: [createBy], references: [id])
    updatedAt                        DateTime           @default(now())
    updatedBy                        BigInt?
    churchSpendingHistoryUpdateByRel User?              @relation("churchSpendingHistoryUpdateByRel", fields: [updatedBy], references: [id])
}

model ChurchSpendingCode {
    id                             BigInt                  @id @default(autoincrement())
    spendingCodeName               String                  @db.VarChar(100)
    code                           String                  @db.VarChar(100)
    description                    String                  @db.Text
    createAt                       DateTime                @default(now())
    createBy                       BigInt?
    deleted                        Boolean                 @default(false)
    churchSpendingCodeCreateByRel  User?                   @relation("churchSpendingCodeCreateByRel", fields: [createBy], references: [id])
    updatedAt                      DateTime                @default(now())
    updatedBy                      BigInt?
    churchSpendingCodeUpdateByRel  User?                   @relation("churchSpendingCodeUpdateByRel", fields: [updatedBy], references: [id])
    churchSpendingCodeIdRel        ChurchSpending[]        @relation("churchSpendingCodeIdRel")
    churchSpendingCodeHistoryIdRel ChurchSpendingHistory[] @relation("churchSpendingHistoryCodeIdRel")
}

enum Type {
    CHURCH
    STORE
    FARM
}
